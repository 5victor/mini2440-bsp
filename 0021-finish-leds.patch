From 4ac6ef62b5a8a5dfffc84dd7b0501a4ded7517fd Mon Sep 17 00:00:00 2001
From: victor <vic7tor@gmail.com>
Date: Sat, 30 Jul 2011 22:14:55 +0800
Subject: [PATCH 21/36] finish leds

---
 arch/arm/Kconfig                                |    1 +
 arch/arm/mach-s3c2440x/Makefile                 |    1 +
 arch/arm/mach-s3c2440x/include/mach/hardware.h  |    3 +-
 arch/arm/mach-s3c2440x/include/mach/regs-gpio.h |   49 +++++++++++++++++++
 arch/arm/mach-s3c2440x/leds.c                   |   59 +++++++++++++++++++++++
 5 files changed, 112 insertions(+), 1 deletions(-)
 create mode 100644 arch/arm/mach-s3c2440x/include/mach/regs-gpio.h
 create mode 100644 arch/arm/mach-s3c2440x/leds.c

diff --git a/arch/arm/Kconfig b/arch/arm/Kconfig
index 46f5fd0..261602a 100644
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@ -212,6 +212,7 @@ choice
 config ARCH_S3C2440X
 	bool "S3C2440 machine porting by victor"
 	select CPU_ARM920T
+	select LEDS
 	help
 	  This enable suport for s3c2440 machine, it porting by victor
 
diff --git a/arch/arm/mach-s3c2440x/Makefile b/arch/arm/mach-s3c2440x/Makefile
index bef1a88..fad48ff 100644
--- a/arch/arm/mach-s3c2440x/Makefile
+++ b/arch/arm/mach-s3c2440x/Makefile
@@ -1,2 +1,3 @@
 obj-y				+=	io.o irq.o timer.o clock.o
+obj-y				+=	leds.o
 obj-$(CONFIG_MACH_MINI2440)	+=	mach-mini2440.o
diff --git a/arch/arm/mach-s3c2440x/include/mach/hardware.h b/arch/arm/mach-s3c2440x/include/mach/hardware.h
index 7cb5d8f..6c34c18 100644
--- a/arch/arm/mach-s3c2440x/include/mach/hardware.h
+++ b/arch/arm/mach-s3c2440x/include/mach/hardware.h
@@ -13,6 +13,7 @@
 #define UART0_PA	0x50000000
 #define UART1_PA	0x50004000
 #define UART2_PA	0x50008000
+#define GPIO_PA		0x56000000
 
 
 #define MAP_VA_BASE	0xF0000000
@@ -32,6 +33,6 @@
 #define	UART0_VA	0xEE000000
 #define	UART1_VA	MAP_VA(UART1_PA)
 #define	UART2_VA	MAP_VA(UART2_PA)
-
+#define GPIO_VA		MAP_VA(GPIO_PA)
 
 #endif
diff --git a/arch/arm/mach-s3c2440x/include/mach/regs-gpio.h b/arch/arm/mach-s3c2440x/include/mach/regs-gpio.h
new file mode 100644
index 0000000..b7930da
--- /dev/null
+++ b/arch/arm/mach-s3c2440x/include/mach/regs-gpio.h
@@ -0,0 +1,49 @@
+#ifndef __ARCH_ASM_REGS_GPIO_H
+#define __ARCH_ASM_REGS_GPIO_H
+
+#define GPACON		0x0
+#define GPADAT		0x4
+#define GPBCON		0x10
+#define GPBDAT		0x14
+#define GPBUP		0x18
+#define GPCCON		0x20
+#define GPCDAT		0x24
+#define GPCUP		0x28
+#define GPDCON		0x30
+#define GPDDAT		0x34
+#define GPDUP		0x38
+#define GPECON		0x40
+#define GPEDAT		0x44
+#define GPEUP		0x48
+#define GPFCON		0x50
+#define GPFDAT		0x54
+#define GPFUP		0x58
+#define GPGCON		0x60
+#define GPGDAT		0x64
+#define GPGUP		0x68
+#define GPHCON		0x70
+#define GPHDAT		0x74
+#define GPHUP		0x78
+#define GPJCON		0xD0
+#define GPJDAT		0xD4
+#define GPJUP		0xD8
+
+#define MISCCR		0x80
+#define DCLKCO		0x84
+#define EXTINT0		0x88
+#define EXTINT1		0x8C
+#define EXTINT2		0x90
+#define EINTFLT0	0x94
+#define EINTFLT1	0x98
+#define EINTFLT2	0x9C
+#define EINTFLT3	0xA0
+#define EINTMASK	0xA4
+#define EINTPEND	0xA8
+#define GSTATUS0	0xAC
+#define GSTATUS1	0xB0
+#define GSTATUS2	0xB4
+#define GSTATUS3	0xB8
+#define GSTATUS4	0xBC
+#define MSLCON		0xCC
+
+#endif
diff --git a/arch/arm/mach-s3c2440x/leds.c b/arch/arm/mach-s3c2440x/leds.c
new file mode 100644
index 0000000..3862844
--- /dev/null
+++ b/arch/arm/mach-s3c2440x/leds.c
@@ -0,0 +1,59 @@
+#include <asm/leds.h>
+#include <linux/init.h>
+#include <linux/kernel.h>
+#include <mach/hardware.h>
+#include <mach/regs-gpio.h>
+#include <asm/io.h>
+
+/*
+LED1 LED2 LED3 LED4
+GPB5 GPB6 GPB7 GPB8
+status = 1, led on
+status = 0, led off
+*/
+
+static void led_control(int index, int status)
+{
+	int offset = index + 4;
+	int gpbdat = ioread32(GPIO_VA + GPBDAT);
+	if (!status) { /*gpio output: 1 led off, 0 led on*/
+		gpbdat |= 1 << offset;
+	} else {
+		gpbdat &= ~(1 << offset);
+	}
+	iowrite32(gpbdat, GPIO_VA + GPBDAT);
+}
+
+static void leds_event_timer(void)
+{
+	static int index = 4;
+	led_control(index, 0);
+	index++;
+	if (index == 5) {
+		index = 1;
+	}
+	led_control(index, 1);
+}
+
+static void s3c2440x_leds_event(led_event_t event)
+{
+	switch(event) {
+	case led_timer:
+		leds_event_timer();
+		break;
+	default:
+		;
+	}
+}
+
+
+static int __init s3c2440x_leds_init(void)
+{
+	leds_event = s3c2440x_leds_event;
+	unsigned int gpbcon = ioread32(GPIO_VA + GPBCON);
+	gpbcon &= ~((3 << 10) | (3 << 12) | (3 << 14) | (3 << 16));
+	gpbcon |= (1 << 10) | (1 << 12) | (1 << 14) | (1 << 16);
+	iowrite32(gpbcon, GPIO_VA + GPBCON);
+}
+
+arch_initcall(s3c2440x_leds_init);
-- 
1.7.1


From 4e0284c6931f6aafbffeb6767fcf4fff850dfdba Mon Sep 17 00:00:00 2001
From: victor <vic7tor@gmail.com>
Date: Mon, 8 Aug 2011 10:53:55 +0800
Subject: [PATCH 27/36] fix SPCON

---
 drivers/misc/mfrc522/spi.c |  122 ++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 122 insertions(+), 0 deletions(-)
 create mode 100644 drivers/misc/mfrc522/spi.c

diff --git a/drivers/misc/mfrc522/spi.c b/drivers/misc/mfrc522/spi.c
new file mode 100644
index 0000000..3169958
--- /dev/null
+++ b/drivers/misc/mfrc522/spi.c
@@ -0,0 +1,122 @@
+#include <linux/init.h>
+#include <linux/kernel.h>
+#include <linux/io.h>
+#include <linux/clk.h>
+#include <linux/spinlock.h>
+#include <mach/hardware.h>
+#include <mach/regs-spi.h>
+#include <linux/delay.h>
+
+/* THIS INTERFACE USE SPI0, THE S3C2440_SPI::MEMBASE*/
+/* chip sel GPB0*/
+
+#define BAUD	5000000 /*5MHz*/
+
+
+struct s3c2440_spi
+{
+	void 		*membase;
+	spinlock_t	lock;
+	int cs;
+};
+
+static struct s3c2440_spi s3c2440_spi = {0};
+
+static inline unsigned int spi_read_reg(int reg_offset)
+{
+	return ioread32(s3c2440_spi.membase + reg_offset);
+}
+
+static void inline spi_write_reg(unsigned int value, int reg_offset)
+{
+	iowrite32(value, s3c2440_spi.membase + reg_offset);
+}
+
+static void inline spi_ready(void)
+{
+	unsigned int spsta;
+	while(1) {
+		spsta = spi_read_reg(SPSTA);
+		if (spsta & 1)
+			break;
+	}
+}
+
+/*
+GPE13 Input/output SPICLK0 – –
+GPE12 Input/output SPIMOSI0 – –
+GPE11 Input/output SPIMISO0 
+chip sel GPB0
+ */
+
+
+static void spi_init_gpio(void)
+{
+	int gpecon;
+	int gpbcon;
+	int gpbdat;
+	
+	gpbcon = ioread32(GPIO_VA + 0x10);
+	gpbcon &= ~(3 << 0);
+	gpbcon |= 1 << 0;
+	iowrite32(gpbcon, GPIO_VA + 0x10);
+	gpbdat = ioread32(GPIO_VA + 0x14);
+/*	gpbdat |= 1;*/
+	iowrite32(gpbdat, GPIO_VA + 0x14);
+
+	gpecon = ioread32(GPIO_VA + 0x40);
+	gpecon &= ~((3 << 26) | (3 << 24) | (3 << 22));
+	gpecon |= (2 << 26) | (2 << 24) | (2 << 22);
+	iowrite32(gpecon, GPIO_VA + 0x40);
+}
+
+int spi_init(void)
+{
+	int pclk_rate;
+	struct clk *pclk;
+	int pre;
+
+	s3c2440_spi.lock = SPIN_LOCK_UNLOCKED;
+	s3c2440_spi.membase = SPI0_VA;
+
+	unsigned int spcon;
+	spcon = (0 << 5) | (1 << 4) | (1 << 3) | (0 << 2) | (0 << 1) | (0 << 0); /* POLL | SCK EN | MASTER | CPOL = 0 | CPHA = 0 | TAG = 0*/
+					/* MFRC522 required CPOL CPHA */
+	spi_write_reg(spcon, SPCON);
+	
+	pclk = clk_get(NULL, "pclk");
+	pclk_rate = clk_get_rate(pclk);
+
+	pre = pclk_rate / 2;
+	pre = pre / BAUD - 1;
+	spi_write_reg(pre, SPPRE);
+	
+	spi_init_gpio();	
+}
+
+unsigned char spi_get_char(void)
+{
+	spi_ready();
+	spi_write_reg(0xFF, SPTDAT);
+	spi_ready();
+	return spi_read_reg(SPRDAT);
+}
+
+void spi_put_char(unsigned char ch)
+{
+	spi_ready();
+	spi_write_reg(ch, SPTDAT);
+}
+
+int spi_debug(void *dummy)
+{
+	char test[] = "xiaoniu";
+	int i;
+	printk(KERN_INFO "%s:entery debug...\n", __func__);
+	while(1) {
+		for (i = 0; i < sizeof(test); i++) {
+			spi_put_char(test[i]);
+			udelay(100);
+		}
+	}
+}
-- 
1.7.1


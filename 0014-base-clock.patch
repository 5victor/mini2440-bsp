From b08c20c4a51db28157f9a6a25f5ae67d510bc1e0 Mon Sep 17 00:00:00 2001
From: victor <vic7tor@gmail.com>
Date: Fri, 22 Jul 2011 16:32:43 +0800
Subject: [PATCH 14/36] base clock

---
 arch/arm/mach-s3c2440x/Makefile             |    5 +----
 arch/arm/mach-s3c2440x/clock.c              |    3 +++
 arch/arm/mach-s3c2440x/include/mach/clock.h |   23 +++++++++++++++++++++++
 arch/arm/mach-s3c2440x/irq.c                |    3 ++-
 arch/arm/mach-s3c2440x/timer.c              |    7 ++++---
 5 files changed, 33 insertions(+), 8 deletions(-)
 create mode 100644 arch/arm/mach-s3c2440x/clock.c
 create mode 100644 arch/arm/mach-s3c2440x/include/mach/clock.h

diff --git a/arch/arm/mach-s3c2440x/Makefile b/arch/arm/mach-s3c2440x/Makefile
index 3c5ef81..bef1a88 100644
--- a/arch/arm/mach-s3c2440x/Makefile
+++ b/arch/arm/mach-s3c2440x/Makefile
@@ -1,5 +1,2 @@
-
-
-
-obj-y				+=	io.o irq.o timer.o
+obj-y				+=	io.o irq.o timer.o clock.o
 obj-$(CONFIG_MACH_MINI2440)	+=	mach-mini2440.o
diff --git a/arch/arm/mach-s3c2440x/clock.c b/arch/arm/mach-s3c2440x/clock.c
new file mode 100644
index 0000000..7c0872c
--- /dev/null
+++ b/arch/arm/mach-s3c2440x/clock.c
@@ -0,0 +1,3 @@
+#include <mach/clock.h>
+
+
diff --git a/arch/arm/mach-s3c2440x/include/mach/clock.h b/arch/arm/mach-s3c2440x/include/mach/clock.h
new file mode 100644
index 0000000..51d9911
--- /dev/null
+++ b/arch/arm/mach-s3c2440x/include/mach/clock.h
@@ -0,0 +1,23 @@
+#ifndef __ASM_ARCH_CLOCK_H
+#define __ASM_ARCH_CLOCK_H
+
+#include <linux/clk.h>
+struct clk_ops {
+	int 	(*set_rate)(struct clk *c, unsigned long rate);
+	unsigned long (*get_rate)(struct clk *c);
+	int 	(*set_parent)(struct clk *c, struct clk *p);
+	int 	(*enable)(struct clk *c);
+	int	(*disable)(struct clk *c);
+};
+
+struct clk {
+	struct list_head	node;
+	struct clk		*parent;
+	const char		*name;
+	unsigned long		rate;
+	struct	clk_ops		*ops;
+};
+
+
+
+#endif
diff --git a/arch/arm/mach-s3c2440x/irq.c b/arch/arm/mach-s3c2440x/irq.c
index f4eb027..0f0bcfe 100644
--- a/arch/arm/mach-s3c2440x/irq.c
+++ b/arch/arm/mach-s3c2440x/irq.c
@@ -1,5 +1,6 @@
 #include <asm/io.h>
 #include <linux/irq.h>
+#include <linux/init.h>
 #include <mach/hardware.h>
 #include <mach/irqs.h>
 #include <mach/regs-int.h>
@@ -39,7 +40,7 @@ struct irq_chip s3c2440x_chip = {
 	.unmask	= s3c2440x_irq_unmask,
 };
 
-void s3c2440x_init_irq(void)
+void __init s3c2440x_init_irq(void)
 {
 	int i;
 	for (i = 0; i < NR_IRQS; i++) {
diff --git a/arch/arm/mach-s3c2440x/timer.c b/arch/arm/mach-s3c2440x/timer.c
index 02c07e8..c4b6267 100644
--- a/arch/arm/mach-s3c2440x/timer.c
+++ b/arch/arm/mach-s3c2440x/timer.c
@@ -7,10 +7,11 @@
 #include <mach/regs-timer.h>
 #include <linux/irq.h>
 #include <linux/interrupt.h>
+#include <linux/init.h>
 
 static void s3c2440x_timer_init(void);
 
-struct sys_timer s3c2440x_timer = {
+struct sys_timer s3c2440x_timer __initdata = {
 	.init = s3c2440x_timer_init
 };
 
@@ -28,14 +29,14 @@ static struct irqaction s3c2440x_timer_action = {
 };
 
 
-static void s3c2440x_timer4_setup(void)
+static void __init s3c2440x_timer4_setup(void)
 {
 	iowrite32(4 << 16, TIMER_VA + TCFG1);
 	iowrite16(LATCH, TIMER_VA + TCNTB4);
 	iowrite32(1 << 22 | 1 << 20, TIMER_VA + TCON);
 }
 
-static void s3c2440x_timer_init(void)
+static void __init s3c2440x_timer_init(void)
 {
 	s3c2440x_timer4_setup();
 	setup_irq(INT_TIMER4, &s3c2440x_timer_action);
-- 
1.7.1

